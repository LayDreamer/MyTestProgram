<Window x:Class="ModelReviewFunction.UI.ProblemSheet"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:ModelReviewFunction.UI"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:converter="clr-namespace:ModelReviewFunction.MVVM"
        xmlns:mvvm="http://www.galasoft.ch/mvvmlight"
        mc:Ignorable="d" 
        Title="问题记录表"
        Name="problemSheet" d:DesignHeight="450" d:DesignWidth="1500">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction  Command="{Binding ClosingProblemSheetCommand}" />
            <!--<mvvm:EventToCommand></mvvm:EventToCommand>-->
            <!--CommandParameter="{Binding RelativeSource={x:Static RelativeSource.Self}}"-->
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <ResourceDictionary>
            <converter:Bool2VisibilityConverter x:Key="BoolConverter"/>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="WindowThemes.xaml" />-->
                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="DeepPurple" SecondaryColor="Lime"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,10,0">
            <Button Name="Btns" Width="100" Height="25" Content="问题列表" Command="{Binding SummaryProblemCommand}" />
            <Button Name="BtnAdd" Width="60" Height="25" Content="新增" Command="{Binding AddProblemCommand}"  Margin="5,0,0,0"/>
            <Button Name="BtnDel" Width="60" Height="25" Content="删除" Command="{Binding DelProblemCommand}"  Margin="5,0,0,0"/>
        </StackPanel>
        <DataGrid Grid.Row="1" Name="dataGrid" Width="Auto" MinWidth="1500" 
                  ItemsSource="{Binding DisplayProblems,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                  SelectedItem="{Binding SelectedProblem,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                  VerticalContentAlignment="Center"
                  HorizontalContentAlignment="Center"
                  HorizontalScrollBarVisibility="Auto"
                  VerticalScrollBarVisibility="Auto"
                  RowHeaderWidth="0"
                  AutoGenerateColumns="False" CanUserAddRows="False" >
            <!--HorizontalScrollBarVisibility="Auto"-->
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="楼号"  IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" Text="{Binding BuildingNumber,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--<DataGridTemplateColumn Header="户型" IsReadOnly="True" Width="Auto" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock  VerticalAlignment="Center" Text="{Binding HouseType,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->
                <DataGridTemplateColumn Header="空间" IsReadOnly="True" Width="Auto" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" Text="{Binding RoomName,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="审核项" IsReadOnly="True" Width="Auto" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" Text="{Binding AuditItem,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="系统名称" IsReadOnly="True" Width="Auto" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" Text="{Binding WorkSystemName,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="错误数量" Width="80" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <!--Height="60" Width="60" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"-->
                            <TextBox Height="40"  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Text="{Binding ErrorNumber,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="问题类别" IsReadOnly="True" Width="Auto" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" Text="{Binding ProblemCategory.CategoryName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="问题归类1" IsReadOnly="True" Width="Auto" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" Text="{Binding ProblemType1.Type1Name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="问题归类2" Width="*" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox  ItemsSource="{Binding ProblemType2,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  
                                       VerticalContentAlignment="Center"
                                       ToolTip="{Binding SelectedProblemType2.Type2Name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding SelectedProblemType2,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Type2Name"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="问题描述" Width="*" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding ProblemDes,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                      ToolTip="{Binding SelectedProblemDes.ProblemDes,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding SelectedProblemDes,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      VerticalContentAlignment="Center" 
                                      DisplayMemberPath="ProblemDes"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="问题视口" IsReadOnly="True" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button
                                  ToolTip="请选择问题模型"
                                  Content="Pick"
                                  Style="{StaticResource MaterialDesignFlatDarkButton}">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                                        <i:InvokeCommandAction Command="{Binding CreateViewPortCommand}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding ViewPortLeftCommand}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewMouseDoubleClick">
                                        <i:InvokeCommandAction Command="{Binding ViewPortDoubleClickCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="问题截图"  Width="Auto" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ScrollViewer VerticalScrollBarVisibility="Auto" MaxHeight="70" >
                                <ListBox 
                                     ItemsSource="{Binding ProblemScreenshots,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                    <!--ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"-->
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <RichTextBox  Width="60" Height="40" MouseDoubleClick="RichTextBox_MouseDoubleClick" PreviewKeyDown="RichTextBox_KeyDown">
                                                <!--PreviewMouseLeftButtonDown="RichTextBox_PreviewMouseLeftButtonDown"-->
                                                <RichTextBox.CommandBindings>
                                                    <CommandBinding Command="ApplicationCommands.Paste" Executed="CommandBinding_Executed"></CommandBinding>
                                                </RichTextBox.CommandBindings>
                                                <FlowDocument  AllowDrop="True">
                                                    <BlockUIContainer>
                                                        <Image  Source="{Binding ScreenshotFilePath,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                                        </Image>
                                                    </BlockUIContainer>
                                                </FlowDocument>
                                            </RichTextBox>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </ScrollViewer>
                            <!--<Image  Height="60" Stretch="UniformToFill"
                                    Source="{Binding ProblemScreenshots,UpdateSourceTrigger=PropertyChanged}"/>-->
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="备注" Width="80">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBox Height="40" TextWrapping="WrapWithOverflow" VerticalAlignment="Center" Text="{Binding Remark,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="反馈人员/时间" IsReadOnly="True"  Width="Auto" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding FeedbackAndDate,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="销项人" IsReadOnly="True"  Width="Auto" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" Text="{Binding OutputMan,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="销项" IsReadOnly="True" Width="80" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button
                                    Style="{StaticResource MaterialDesignRaisedButton}"
                                    materialDesign:ButtonAssist.CornerRadius="10">
                                <TextBlock Text="{Binding OutputText,UpdateSourceTrigger=PropertyChanged}" />
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding OutputMouseLeftCommand}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                                        <i:InvokeCommandAction Command="{Binding OutputMouseRightCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="复核" IsReadOnly="True" Width="80" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Style="{StaticResource MaterialDesignRaisedButton}"
                                    materialDesign:ButtonAssist.CornerRadius="10">
                                <TextBlock Text="{Binding ReviewText,UpdateSourceTrigger=PropertyChanged}" />
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding ReviewMouseLeftCommand}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                                        <i:InvokeCommandAction Command="{Binding ReviewMouseRightCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn IsReadOnly="True" Width="*" >
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="状态">
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" Text="{Binding ProblemStatus,UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding ProblemStatusDoubleClickCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <local:UControlImage  Grid.Row="1" Width="Auto " Height="Auto" x:Name="uControl_Floor"  Margin="20,30,20,30"
                              Background="DarkSlateGray"
                              Visibility="{Binding IsImageViewer,Converter={StaticResource BoolConverter},UpdateSourceTrigger=PropertyChanged}"/>
    </Grid>
</Window>
